openapi: 3.0.0
info:
  title: Mad Mike's Mechanic Shop Express.js Vehicle API
  version: 1.0.0
paths:
  /vehicles:
    get:
      summary: Get all vehicles
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
        '400':
          description: No vehicles found
        '500':
          description: Internal server error

    post:
      summary: Create a new vehicle
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vehicle'
      responses:
        '201':
          description: Vehicle created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '500':
          description: Internal server error

  /vehicles/{param}:
    get:
      summary: Get vehicle(s) by parameter (Make, model, VIN, etc..)
      parameters:
        - in: path
          name: _id
          schema:
            type: number
          description: Object ID of the vehicle to get
        - in: path
          name: VIN
          schema:
            type: string
          description: VIN of the vehicle to get
        - in: path
          name: Make
          schema:
            type: string
          description: Make of the vehicle(s) to get
        - in: path
          name: Model
          schema:
            type: string
          description: Make of the vehicle(s) to get
        - in: path
          name: Year
          schema:
            type: integer
          description: Year of the vehicle(s) to get
        - in: path
          name: Plate Number
          schema:
            type: string
          description: License plate number of the vehicle to get
        - in: path
          name: Plate State
          schema:
            type: string
          description: State of a vehicle's registration
        - in: path
          name: Customer Last Name
          schema:
            type: string
          description: Name of the customer
        - in: path
          name: DL Number
          schema:
            type: string
          description: Customer driver's license number
        - in: path
          name: Shop
          schema:
            type: integer
          description: Mad Mike's shop number
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
        '400':
          description: Bad Request
        '500':
          description: Internal server error
    put:
      summary: Update vehicle by parameter (id, VIN, Plate Number)
      parameters:
        - in: path
          name: _id
          schema:
            type: number
          description: Object ID of the vehicle to update
        - in: path
          name: VIN
          schema:
            type: string
          description: VIN of the vehicle to update
        - in: path
          name: Plate Number
          schema:
            type: string
          description: License plate number of the vehicle to update
      requestBody:
        required: true
        description: For PUT operation, not all fields need to be filled out. Only those listed in the request body will be updated.
        content:
          application/jason:
            schema:
              $ref: '#/components/schemas/Vehicle'
      responses:
        '201':
          description: Vehicle updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '500':
          description: Internal server error

    delete:
      summary: Deletes vehicle by parameter (id, VIN, Plate Number)
      parameters:
        - in: path
          name: _id
          schema:
            type: number
          description: Object ID of the vehicle to delete
        - in: path
          name: VIN
          schema:
            type: string
          description: VIN of the vehicle to delete
        - in: path
          name: Plate Number
          schema:
            type: string
          description: License plate number of the vehicle to delete
      responses:
        '200':
          description:  Vehicle was deleted


components:
  schemas:
    Vehicle:
      type: object
      properties:
        VIN:
          type: string
          description: VIN of the customer's vehicle
          example: 123456789
        Make:
          type: string
          description: Customer's vehicle make
          example: Scion
        Model:
          type: string
          description: Customer's vehicle model
          example: xB
        Year:
          type: integer
          description: Vehicle year
          example: 2009
        PlateNumber:
          type: string
          description: License plate number
          example: H3LL0
        PlateState:
          type: string
          description: Vehicle's state of registration
          example: Alabama

        Customer:
          type: object
          properties:
            FirstName:
              type: string
              description: Customer's first name
              example: Zach
            LastName:
              type: string
              description: Customer's last name
              example: Armistead
            DLNumber:
              type: string
              description: Customer driver's license number
              example: 8742556
            Address:
              type: object
              properties:
                Street:
                  type: string
                  description: Customer street address
                  example: 1234 Street Rd
                City:
                  type: string
                  description: Customer's city of residence
                  example: Huntsville
                Zip:
                  type: integer
                  description: Customer's zip code
                  example: 35803
        Problem:
          type: string
          description: Description of problem with vehicle
          example: Could be the alternator
        Shop:
          type: integer
          description: Mad Mike's Shop Number
          example: 48
        AcceptDate:
          type: string
          description: Date the vehicle arrived at the shop
          example: 5/5/2023
        CompleteDate:
          type: string
          description: Date the vehicle left the shop
          example: 5/6/2023
        Employee:
          type: string
          description: Employee who worked on the vehicle
          example: Jared Dines
